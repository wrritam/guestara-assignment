// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int      @id @default(autoincrement())
  email          String   @unique
  name           String?
  password       String
  is_verified    Boolean
  otp            Int?
  last_login     String?
  categories     Category[]
  subcategories  SubCategory[]
  Items          Item[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id               Int           @id @default(autoincrement())
  name             String
  image            String
  description      String
  taxApplicability Boolean       @default(true)
  taxNumber        Int
  taxType          String?
  createdById      Int 
  subCategories    SubCategory[]
  items            Item[]
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  createdBy        User          @relation(fields: [createdById], references: [id])
}

model SubCategory {
  id               Int      @id @default(autoincrement())
  name             String
  image            String
  description      String
  taxApplicability Boolean  @default(true)
  taxNumber        Int      
  category         Category @relation(fields: [categoryId], references: [id])
  categoryId       Int
  createdById      Int
  items            Item[]
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  createdBy        User     @relation(fields: [createdById], references: [id])
}




model Item {
  id               Int          @id @default(autoincrement())
  name             String
  image            String
  description      String
  taxApplicability Boolean
  taxNumber        Int
  baseAmount       Float
  discount         Float
  totalAmount      Float
  addedById        Int
  category         Category     @relation(fields: [categoryId], references: [id])
  categoryId       Int
  subCategory      SubCategory? @relation(fields: [subCategoryId], references: [id])
  subCategoryId    Int?
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  addedBy          User         @relation(fields: [addedById], references: [id])
}

